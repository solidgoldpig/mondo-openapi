{
  "operationId": "token",
  "summary": "Acquire an access token",
  "description": "xxxxxxx",
  "parameters": [
    {
      "name": "grant_type",
      "type": "string",
      "required": true,
      "enum": [
        "authorization_code",
        "password",
        "refresh_token"
      ],
      "in": "formData",
      "description": "The type of authorization grant being requested. Should be <code>authorization_code</code> unless using your own account"
    },
    {
      "name": "client_id",
      "type": "string",
      "required": true,
      "in": "formData",
      "description": "client_id"
    },
    {
      "name": "client_secret",
      "type": "string",
      "required": true,
      "in": "formData",
      "description": "client_secret"
    },
    {
      "name": "state",
      "type": "string",
      "required": false,
      "in": "formData",
      "description": "**Required if `grant_type` is set to `authorization_code`**<br>An unguessable random string which is used to protect against cross-site request forgery attacks"
    },
    {
      "name": "response_type",
      "type": "string",
      "required": false,
      "in": "formData",
      "description": "**Required if `grant_type` is set to `authorization_code`**<br>This must be set to <code>code</code>"
    },
    {
      "name": "redirect_uri",
      "type": "string",
      "required": false,
      "in": "formData",
      "description": "**Required if `grant_type` is set to `authorization_code`**<br>The URL in your app where users will be sent after authorization"
    },
    {
      "name": "username",
      "type": "string",
      "in": "formData",
      "description": "**Required if `grant_type` is set to `password`**<br>Username - can only be used for your own account"
    },
    {
      "name": "password",
      "type": "string",
      "in": "formData",
      "description": "**Required if `grant_type` is set to `password`**<br>Password - can only be used for your own account"
    },
    {
      "name": "refresh_token",
      "type": "string",
      "in": "formData",
      "description": "**Required if `grant_type` is set to `refresh_token`**<br>The refresh token received along with the original access token"
    }
  ],
  "tags": [
    "authorization"
  ],
  "responses": {
    "allOf": [
      {
        "$ref": "#/definitions/errors-noauth"
      },
      {
        "200": {
          "description": "Authorization details",
          "schema": {
            "type": "object",
            "properties": {
              "access_token": {
                "description": "access_token",
                "type": "string"
              },
              "client_id": {
                "description": "client_id",
                "type": "string"
              },
              "expires_in": {
                "description": "expires_in",
                "type": "number"
              },
              "refresh_token": {
                "description": "refresh_token",
                "type": "string"
              },
              "token_type": {
                "description": "",
                "type": "string",
                "enum": ["Bearer"],
                "default": "Bearer"
              },
              "user_id": {
                "description": "user_id",
                "type": "string"
              }
            },
            "required": ["access_token", "client_id", "expires_in", "refresh_token", "token_type", "user_id"]
          },
          "examples": {
            "application/json": {
              "access_token": "access_token_2",
              "client_id": "client_id",
              "expires_in": 21600,
              "refresh_token": "refresh_token_2",
              "token_type": "Bearer",
              "user_id": "user_id"
            }
          }
        }
      }
    ]
  }
}